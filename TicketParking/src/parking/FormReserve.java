/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package parking;

import java.text.ParseException;
import javax.swing.JOptionPane;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author chris
 */
public class FormReserve extends javax.swing.JFrame implements Runnable {
    List<String> listVenue;    
    List<String> listLocation;
    List<String> listLots;
    String dateRange;
    String venueName;
    String location;
    String checkIn;
    String type;
    int price;
    FormLogin parent;
    
    /**
     * Creates new form ParkingReservation
     */
    public FormReserve(FormLogin parentLogin) {
        initComponents();
        parent=parentLogin;
        textfield_UserID.setText(parent.idAccount);
        listVenue = isiComboVenue();
        for (String venue_name : listVenue){
            combobox_VenueName.addItem(venue_name);
        }
        combobox_TicketType.setSelectedIndex(0);
        textfield_Price.setText("10000");
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        textfield_UserID = new javax.swing.JTextField();
        button_Submit = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        textfield_Price = new javax.swing.JTextField();
        combobox_TicketType = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        list_UnoccupiedLots = new javax.swing.JList<>();
        jLabel4 = new javax.swing.JLabel();
        datechooser_CheckIn = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        combobox_VenueName = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        combobox_Location = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        textfield_UserID.setEditable(false);
        textfield_UserID.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        button_Submit.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        button_Submit.setText("SUBMIT");
        button_Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_SubmitActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("Type :");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 3, 24)); // NOI18N
        jLabel5.setText("Reserve New Parking Lot");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Check-in :");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel9.setText("Your User ID :");

        textfield_Price.setEditable(false);
        textfield_Price.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        combobox_TicketType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Basic", "Premium" }));
        combobox_TicketType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox_TicketTypeItemStateChanged(evt);
            }
        });

        list_UnoccupiedLots.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        list_UnoccupiedLots.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(list_UnoccupiedLots);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setLabelFor(list_UnoccupiedLots);
        jLabel4.setText("Unoccupied lot(s) :");

        datechooser_CheckIn.setDateFormatString("dd MMMM yyyy");
        datechooser_CheckIn.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                datechooser_CheckInPropertyChange(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel8.setText("Price :");

        combobox_VenueName.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox_VenueNameItemStateChanged(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setText("Venue :");

        combobox_Location.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                combobox_LocationItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel11.setText("Location :");

        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(button_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 572, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10)
                                            .addComponent(jLabel11)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING))))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textfield_Price)
                                    .addComponent(combobox_TicketType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(textfield_UserID)
                                    .addComponent(combobox_VenueName, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(combobox_Location, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(datechooser_CheckIn, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(29, 29, 29)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addContainerGap(73, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(228, 228, 228))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel5)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(textfield_UserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combobox_VenueName, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(combobox_Location, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(datechooser_CheckIn, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combobox_TicketType, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(textfield_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jSeparator2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1)))
                .addGap(18, 18, 18)
                .addComponent(button_Submit, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void button_SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_SubmitActionPerformed
        if (datechooser_CheckIn.getDate() != null) {
            venueName = combobox_VenueName.getSelectedItem().toString();
            location = combobox_Location.getSelectedItem().toString();
            SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
            checkIn = formatter.format(datechooser_CheckIn.getDate());
            type = combobox_TicketType.getSelectedItem().toString();
            int lots = Integer.parseInt(list_UnoccupiedLots.getSelectedValue());
            price = Integer.parseInt(textfield_Price.getText());
            int reserve_id = getIdParkingLots(venueName, location);
            reserveNewLot(reserve_id, Integer.parseInt(parent.idAccount), checkIn, lots, price, type);
            JOptionPane.showMessageDialog(this, "Reserve lots berhasil");
            String[] kosong = new String[1];
            list_UnoccupiedLots.setListData(kosong);
            datechooser_CheckIn.setDate(null);
        } else {
            JOptionPane.showMessageDialog(this, "Isi tanggal check-in terlebih dahulu");
        }
    }//GEN-LAST:event_button_SubmitActionPerformed

    private void combobox_VenueNameItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox_VenueNameItemStateChanged
        //TODO add your handling code here:
        combobox_Location.removeAllItems();
        venueName = combobox_VenueName.getSelectedItem().toString();
        listLocation = isiComboLocation(venueName);
        for (String location: listLocation) {
            combobox_Location.addItem(location);
        }
        String[] kosong = new String[1];
        list_UnoccupiedLots.setListData(kosong);
        datechooser_CheckIn.setDate(null);
    }//GEN-LAST:event_combobox_VenueNameItemStateChanged

    private void combobox_LocationItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox_LocationItemStateChanged
        try {
            // TODO add your handling code here:
            if (combobox_Location.getSelectedItem() != null) {
                venueName = combobox_VenueName.getSelectedItem().toString();
                location = combobox_Location.getSelectedItem().toString();
                dateRange = isiDateCheckIn(venueName, location);

                SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH);
                Date startDate = formatter.parse(dateRange.split("~")[0]);
                Date endDate = formatter.parse(dateRange.split("~")[1]);
                Date currentDate = new Date();
                long currentMillis = currentDate.getTime();
                if(startDate.before(currentDate)){
                    startDate.setTime(currentMillis+86400000);
                    if(endDate.before(startDate)){
                        endDate.setTime(currentMillis-86400000);
                    }
                }
                datechooser_CheckIn.setMinSelectableDate(startDate);
                datechooser_CheckIn.setMaxSelectableDate(endDate);
                
                String[] kosong = new String[1];
                list_UnoccupiedLots.setListData(kosong);
                datechooser_CheckIn.setDate(null);
            }
        } catch (ParseException ex) {
            Logger.getLogger(FormReserve.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_combobox_LocationItemStateChanged

    private void datechooser_CheckInPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_datechooser_CheckInPropertyChange
        // TODO add your handling code here:
        if (datechooser_CheckIn.getDate() != null) {
            listLots = isiListLots(
                    combobox_VenueName.getSelectedItem().toString(),
                    combobox_Location.getSelectedItem().toString(),
                    datechooser_CheckIn.getDate().toString());
            String[] arrayLots = listLots.toArray(new String[listLots.size()]);
            list_UnoccupiedLots.setListData(arrayLots);
            list_UnoccupiedLots.setSelectedIndex(0);
        }
    }//GEN-LAST:event_datechooser_CheckInPropertyChange

    private void combobox_TicketTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_combobox_TicketTypeItemStateChanged
        // TODO add your handling code here:
        if (combobox_TicketType.getSelectedItem() != null) {
            textfield_Price.setText(combobox_TicketType.getSelectedItem().equals("Basic") ? "10000" : "40000");
        }
    }//GEN-LAST:event_combobox_TicketTypeItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_Submit;
    private javax.swing.JComboBox<String> combobox_Location;
    private javax.swing.JComboBox<String> combobox_TicketType;
    private javax.swing.JComboBox<String> combobox_VenueName;
    private com.toedter.calendar.JDateChooser datechooser_CheckIn;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JList<String> list_UnoccupiedLots;
    private javax.swing.JTextField textfield_Price;
    private javax.swing.JTextField textfield_UserID;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        
    }

    private static java.util.List<java.lang.String> isiComboVenue() {
        parking.TicketWebService_Service service = new parking.TicketWebService_Service();
        parking.TicketWebService port = service.getTicketWebServicePort();
        return port.isiComboVenue();
    }

    private static java.util.List<java.lang.String> isiComboLocation(java.lang.String venueName) {
        parking.TicketWebService_Service service = new parking.TicketWebService_Service();
        parking.TicketWebService port = service.getTicketWebServicePort();
        return port.isiComboLocation(venueName);
    }

    private static String isiDateCheckIn(java.lang.String venueName, java.lang.String location) {
        parking.TicketWebService_Service service = new parking.TicketWebService_Service();
        parking.TicketWebService port = service.getTicketWebServicePort();
        return port.isiDateCheckIn(venueName, location);
    }

    private static java.util.List<java.lang.String> isiListLots(java.lang.String venueName, java.lang.String location, java.lang.String reserveDate) {
        parking.TicketWebService_Service service = new parking.TicketWebService_Service();
        parking.TicketWebService port = service.getTicketWebServicePort();
        return port.isiListLots(venueName, location, reserveDate);
    }

    private static void reserveNewLot(int parkingLotId, int userId, java.lang.String reservationDate, int lotNumber, int harga, java.lang.String jenisTiket) {
        parking.TicketWebService_Service service = new parking.TicketWebService_Service();
        parking.TicketWebService port = service.getTicketWebServicePort();
        port.reserveNewLot(parkingLotId, userId, reservationDate, lotNumber, harga, jenisTiket);
    }

    private static Integer getIdParkingLots(java.lang.String venueName, java.lang.String location) {
        parking.TicketWebService_Service service = new parking.TicketWebService_Service();
        parking.TicketWebService port = service.getTicketWebServicePort();
        return port.getIdParkingLots(venueName, location);
    }
}
